{
  "service": {
    "userActivationRequired": true,
    "register": true,
    "enableEmail": true,
    "hbsTemplates": {
      "registerSubjectURL": "http://localhost:8080/identity-srv/templates/register_subject.hbs",
      "registerBodyURL": "http://localhost:8080/identity-srv/templates/register_body.hbs",
      "changeSubjectURL": "http://localhost:8080/identity-srv/templates/change_subject.hbs",
      "changeBodyURL": "http://localhost:8080/identity-srv/templates/change_body.hbs",
      "invitationSubjectURL": "http://localhost:8080/identity-srv/templates/invitation_subject.hbs",
      "invitationBodyURL": "http://localhost:8080/identity-srv/templates/invitation_body.hbs",
      "layoutURL": "http://localhost:8080/identity-srv/templates/layout.hbs",
      "resourcesURL": "http://localhost:8080/identity-srv/templates/resources.json"
    },
    "activationURL": "http://restorecommerce.io/activate_user/",
    "emailConfirmationURL": "http://restorecommerce.io/confirm_email_change/",
    "passwordChangeConfirmationURL": "http://restorecommerce.io/confirm_password_change/",
    "invitationURL": "http://restorecommerce.io/#/invite_user/",
    "minUsernameLength": 8,
    "maxUsernameLength": 40
  },
  "logger": {
    "console": {
      "handleExceptions": false,
      "level": "fatal",
      "colorize": true,
      "prettyPrint": true
    }
  },
  "roles": {
    "normalUser": "User"
  },
  "database": {
    "main": {
      "provider": "arango",
      "host": "localhost",
      "port": 8529,
      "database": "identity-srv",
      "autoCreate": true,
      "retries": 6,
      "delay": 30000,
      "collections": [
        "user",
        "role"
      ],
      "customQueries": [
        {
          "path": "filter_ownership.aql",
          "name": "filterByOwnership",
          "type": "filter"
        },
        {
          "path": "filter_role_association.aql",
          "name": "filterByRoleAssociation",
          "type": "filter"
        }
      ]
    }
  },
  "redis": {
    "host": "localhost",
    "port": 6379,
    "offsetStoreInterval": 1000,
    "db-indexes": {
      "db-offsetStore": 0
    }
  },
  "obfuscateAuthNErrorReason": false,
  "authorization": {
    "service": "acs-srv",
    "enabled": true,
    "enforce": true,
    "urns": {
      "entity": "urn:restorecommerce:acs:names:model:entity",
      "user": "urn:restorecommerce:acs:model:user.User",
      "model": "urn:restorecommerce:acs:model",
      "role": "urn:restorecommerce:acs:names:role",
      "roleScopingEntity": "urn:restorecommerce:acs:names:roleScopingEntity",
      "roleScopingInstance": "urn:restorecommerce:acs:names:roleScopingInstance",
      "unauthenticated_user": "urn:restorecommerce:acs:names:unauthenticated-user",
      "property": "urn:restorecommerce:acs:names:model:property",
      "ownerIndicatoryEntity": "urn:restorecommerce:acs:names:ownerIndicatoryEntity",
      "ownerInstance": "urn:restorecommerce:acs:names:ownerInstance",
      "orgScope": "urn:restorecommerce:acs:model:organization.Organization",
      "subjectID": "urn:oasis:names:tc:xacml:1.0:subject:subject-id",
      "resourceID": "urn:oasis:names:tc:xacml:1.0:resource:resource-id",
      "actionID": "urn:oasis:names:tc:xacml:1.0:action:action-id",
      "action": "urn:restorecommerce:acs:names:action",
      "operation": "urn:restorecommerce:acs:names:operation",
      "execute": "urn:restorecommerce:acs:names:action:execute",
      "permitOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:permit-overrides",
      "denyOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:deny-overrides",
      "create": "urn:restorecommerce:acs:names:action:create",
      "read": "urn:restorecommerce:acs:names:action:read",
      "modify": "urn:restorecommerce:acs:names:action:modify",
      "delete": "urn:restorecommerce:acs:names:action:delete",
      "organization": "urn:restorecommerce:acs:model:organization.Organization"
    },
    "cache":  {
      "host": "localhost",
      "port": 6379,
      "db-index": 5,
      "ttl": 3600,
      "prefix": "acs:"
    }
  },
  "client": {
    "acs-srv": {
      "transports": {
        "grpc": {
          "service": "io.restorecommerce.access_control.Service",
          "protos": [
            "io/restorecommerce/access_control.proto"
          ],
          "protoRoot": "node_modules/@restorecommerce/protos/",
          "timeout": 3000
        }
      },
      "loadbalancer": {
        "name": "roundRobin"
      },
      "publisher": {
        "name": "static",
        "instances": [
          "grpc://localhost:50061"
        ]
      },
      "endpoints": {
        "isAllowed": {},
        "whatIsAllowed": {}
      }
    }
  },
  "events": {
    "kafka": {
      "provider": "kafka",
      "groupId": "restore-identity-srv",
      "clientId": "restore-identity-srv",
      "kafkaHost": "localhost:29092",
      "latestOffset": false,
      "userCreated": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.User"
      },
      "userModified": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.User"
      },
      "userDeleted": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.Deleted"
      },
      "roleCreated": {
        "protos": [
          "io/restorecommerce/role.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.role.Role"
      },
      "roleModified": {
        "protos": [
          "io/restorecommerce/role.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.role.Role"
      },
      "roleDeleted": {
        "protos": [
          "io/restorecommerce/role.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.role.Deleted"
      },
      "registered": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.User"
      },
      "activated": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.Activate"
      },
      "passwordChanged": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.PasswordChanged"
      },
      "passwordChangeRequested": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.PasswordChangeRequested"
      },
      "emailChangeConfirmed": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.EmailChanged"
      },
      "emailChangeRequested": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.EmailChangeRequested"
      },
      "unregistered": {
        "protos": [
          "io/restorecommerce/user.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.user.Deleted"
      },
      "restoreCommand": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "restoreResponse": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "healthCheckCommand": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "healthCheckResponse": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "versionCommand": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "versionResponse": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "resetCommand": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "resetResponse": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "configUpdateCommand": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "configUpdateResponse": {
        "protos": [
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "renderRequest": {
        "protos": [
          "io/restorecommerce/rendering.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.rendering.RenderRequest"
      },
      "renderResponse": {
        "protos": [
          "io/restorecommerce/rendering.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.rendering.RenderResponse"
      },
      "sendEmail": {
        "protos": [
          "io/restorecommerce/notification.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "messageObject": "io.restorecommerce.notification.Notification"
      },
      "topics": {
        "user.resource": {
          "topic": "io.restorecommerce.users.resource"
        },
        "role.resource": {
          "topic": "io.restorecommerce.roles.resource"
        },
        "command": {
          "topic": "io.restorecommerce.command",
          "events": [
            "healthCheckCommand",
            "restoreCommand",
            "resetCommand",
            "versionCommand",
            "configUpdateCommand"
          ]
        },
        "rendering": {
          "topic": "io.restorecommerce.rendering",
          "events": [
            "renderResponse"
          ]
        },
        "notification": {
          "topic": "io.restorecommerce.notification"
        }
      }
    },
    "enableEvents": "true"
  },
  "scopingAttributeKeys": {
    "roleScopingEntity": "urn:restorecommerce:acs:names:model:entity",
    "roleScopingInstance": "urn:oasis:names:tc:xacml:1.0:resource:resource-id",
    "organizationUrn": "urn:restorecommerce:acs:model:organization.Organization",
    "ownerIndicatoryEntity": "urn:restorecommerce:acs:names:ownerIndicatoryEntity",
    "userUrn": "urn:restorecommerce:acs:model:user.User",
    "ownerIndicatoryInstance": "urn:restorecommerce:acs:names:ownerInstance"
  },
  "server": {
    "services": {
      "io-restorecommerce-user-srv": {
        "activate": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "changePassword": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "requestEmailChange": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "confirmEmailChange": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "requestPasswordChange": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "confirmPasswordChange": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "confirmUserInvitation": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "sendInvitationEmail": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "find": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "register": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "unregister": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "login": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "findByRole": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "create": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "read": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "delete": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "update": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "upsert": {
          "transport": [
            "grpcIdentity"
          ]
        }
      },
      "io-restorecommerce-role-srv": {
        "read": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "create": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "update": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "upsert": {
          "transport": [
            "grpcIdentity"
          ]
        },
        "delete": {
          "transport": [
            "grpcIdentity"
          ]
        }
      },
      "io-restorecommerce-identity-reflection": {
        "serverReflectionInfo": {
          "transport": [
            "grpcIdentity"
          ]
        }
      },
      "io-restorecommerce-identity-cis": {
        "command": {
          "transport": [
            "grpcIdentity"
          ]
        }
      }
    },
    "transports": [
      {
        "name": "grpcIdentity",
        "provider": "grpc",
        "services": {
          "io-restorecommerce-user-srv": "io.restorecommerce.user.Service",
          "io-restorecommerce-role-srv": "io.restorecommerce.role.Service",
          "io-restorecommerce-identity-reflection": "grpc.reflection.v1alpha.ServerReflection",
          "io-restorecommerce-identity-cis": "io.restorecommerce.commandinterface.Service"
        },
        "protos": [
          "io/restorecommerce/user.proto",
          "io/restorecommerce/role.proto",
          "grpc/reflection/v1alpha/reflection.proto",
          "io/restorecommerce/commandinterface.proto"
        ],
        "protoRoot": "node_modules/@restorecommerce/protos/",
        "addr": "localhost:50051"
      }
    ]
  },
  "serviceNames": {
    "user": "io-restorecommerce-user-srv",
    "role": "io-restorecommerce-role-srv",
    "reflection": "io-restorecommerce-identity-reflection",
    "cis": "io-restorecommerce-identity-cis"
  },
  "errors": {
    "INVALID_CREDENTIALS": {
      "code": "401",
      "message": "Invalid credentials"
    },
    "USER_NOT_LOGGED_IN": {
      "code": "401",
      "message": "Invalid authentication context, please log in first"
    },
    "ACTION_NOT_ALLOWED": {
      "code": "403",
      "message": "Action not allowed on this resource"
    }
  }
}
